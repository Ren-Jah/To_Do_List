version: "3.9"

services:
  front:
    image: sermalenk/skypro-front:lesson-34
    restart: always
    ports:
      - "80:80"
    depends_on:
      - api

  api:
    image: renj4h/todolist:$GITHUB_REF_NAME-$GITHUB_RUN_ID
    restart: always
    depends_on:
      db:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully
    ports:
      - "8000:8000"
    volumes:
      - ./.docker_env:/todolist/.env

  migrations:
    image: renj4h/todolist:$GITHUB_REF_NAME-$GITHUB_RUN_ID
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./.env:/todolist/.env
    command: python manage.py migrate

  db:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      SECRET_KEY: ${SECRET_KEY}
    ports:
      - "5435:5432"
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 3s
      timeout: 3s
      retries: 3
